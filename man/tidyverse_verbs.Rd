% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidyverse_verb_methods.R
\name{tidyverse_verbs}
\alias{tidyverse_verbs}
\alias{add_count.simpr_sims}
\alias{add_count.simpr_spec}
\alias{anti_join.simpr_sims}
\alias{anti_join.simpr_spec}
\alias{arrange_.simpr_sims}
\alias{arrange_.simpr_spec}
\alias{arrange.simpr_sims}
\alias{arrange.simpr_spec}
\alias{as.tbl.simpr_sims}
\alias{as.tbl.simpr_spec}
\alias{auto_copy.simpr_sims}
\alias{auto_copy.simpr_spec}
\alias{collapse.simpr_sims}
\alias{collapse.simpr_spec}
\alias{collect.simpr_sims}
\alias{collect.simpr_spec}
\alias{compute.simpr_sims}
\alias{compute.simpr_spec}
\alias{count.simpr_sims}
\alias{count.simpr_spec}
\alias{distinct_.simpr_sims}
\alias{distinct_.simpr_spec}
\alias{distinct.simpr_sims}
\alias{distinct.simpr_spec}
\alias{do_.simpr_sims}
\alias{do_.simpr_spec}
\alias{do.simpr_sims}
\alias{do.simpr_spec}
\alias{dplyr_col_modify.simpr_sims}
\alias{dplyr_col_modify.simpr_spec}
\alias{dplyr_reconstruct.simpr_sims}
\alias{dplyr_reconstruct.simpr_spec}
\alias{dplyr_row_slice.simpr_sims}
\alias{dplyr_row_slice.simpr_spec}
\alias{filter_.simpr_sims}
\alias{filter_.simpr_spec}
\alias{filter.simpr_sims}
\alias{filter.simpr_spec}
\alias{full_join.simpr_sims}
\alias{full_join.simpr_spec}
\alias{group_by_.simpr_sims}
\alias{group_by_.simpr_spec}
\alias{group_by.simpr_sims}
\alias{group_by.simpr_spec}
\alias{group_data.simpr_sims}
\alias{group_data.simpr_spec}
\alias{group_indices_.simpr_sims}
\alias{group_indices_.simpr_spec}
\alias{group_indices.simpr_sims}
\alias{group_indices.simpr_spec}
\alias{group_keys.simpr_sims}
\alias{group_keys.simpr_spec}
\alias{group_map.simpr_sims}
\alias{group_map.simpr_spec}
\alias{group_modify.simpr_sims}
\alias{group_modify.simpr_spec}
\alias{group_nest.simpr_sims}
\alias{group_nest.simpr_spec}
\alias{group_size.simpr_sims}
\alias{group_size.simpr_spec}
\alias{group_split.simpr_sims}
\alias{group_split.simpr_spec}
\alias{group_trim.simpr_sims}
\alias{group_trim.simpr_spec}
\alias{group_vars.simpr_sims}
\alias{group_vars.simpr_spec}
\alias{groups.simpr_sims}
\alias{groups.simpr_spec}
\alias{inner_join.simpr_sims}
\alias{inner_join.simpr_spec}
\alias{intersect.simpr_sims}
\alias{intersect.simpr_spec}
\alias{left_join.simpr_sims}
\alias{left_join.simpr_spec}
\alias{mutate_.simpr_sims}
\alias{mutate_.simpr_spec}
\alias{mutate.simpr_sims}
\alias{mutate.simpr_spec}
\alias{n_groups.simpr_sims}
\alias{n_groups.simpr_spec}
\alias{nest_by.simpr_sims}
\alias{nest_by.simpr_spec}
\alias{nest_join.simpr_sims}
\alias{nest_join.simpr_spec}
\alias{pull.simpr_sims}
\alias{pull.simpr_spec}
\alias{relocate.simpr_sims}
\alias{relocate.simpr_spec}
\alias{rename_.simpr_sims}
\alias{rename_.simpr_spec}
\alias{rename_with.simpr_sims}
\alias{rename_with.simpr_spec}
\alias{rename.simpr_sims}
\alias{rename.simpr_spec}
\alias{right_join.simpr_sims}
\alias{right_join.simpr_spec}
\alias{rows_delete.simpr_sims}
\alias{rows_delete.simpr_spec}
\alias{rows_insert.simpr_sims}
\alias{rows_insert.simpr_spec}
\alias{rows_patch.simpr_sims}
\alias{rows_patch.simpr_spec}
\alias{rows_update.simpr_sims}
\alias{rows_update.simpr_spec}
\alias{rows_upsert.simpr_sims}
\alias{rows_upsert.simpr_spec}
\alias{rowwise.simpr_sims}
\alias{rowwise.simpr_spec}
\alias{same_src.simpr_sims}
\alias{same_src.simpr_spec}
\alias{sample_frac.simpr_sims}
\alias{sample_frac.simpr_spec}
\alias{sample_n.simpr_sims}
\alias{sample_n.simpr_spec}
\alias{select_.simpr_sims}
\alias{select_.simpr_spec}
\alias{select.simpr_sims}
\alias{select.simpr_spec}
\alias{semi_join.simpr_sims}
\alias{semi_join.simpr_spec}
\alias{setdiff.simpr_sims}
\alias{setdiff.simpr_spec}
\alias{setequal.simpr_sims}
\alias{setequal.simpr_spec}
\alias{slice_.simpr_sims}
\alias{slice_.simpr_spec}
\alias{slice_head.simpr_sims}
\alias{slice_head.simpr_spec}
\alias{slice_max.simpr_sims}
\alias{slice_max.simpr_spec}
\alias{slice_min.simpr_sims}
\alias{slice_min.simpr_spec}
\alias{slice_sample.simpr_sims}
\alias{slice_sample.simpr_spec}
\alias{slice_tail.simpr_sims}
\alias{slice_tail.simpr_spec}
\alias{slice.simpr_sims}
\alias{slice.simpr_spec}
\alias{summarise_.simpr_sims}
\alias{summarise_.simpr_spec}
\alias{summarise.simpr_sims}
\alias{summarise.simpr_spec}
\alias{tally.simpr_sims}
\alias{tally.simpr_spec}
\alias{tbl_vars.simpr_sims}
\alias{tbl_vars.simpr_spec}
\alias{transmute_.simpr_sims}
\alias{transmute_.simpr_spec}
\alias{transmute.simpr_sims}
\alias{transmute.simpr_spec}
\alias{ungroup.simpr_sims}
\alias{ungroup.simpr_spec}
\alias{union_all.simpr_sims}
\alias{union_all.simpr_spec}
\alias{union.simpr_sims}
\alias{union.simpr_spec}
\alias{complete_.simpr_sims}
\alias{complete_.simpr_spec}
\alias{complete.simpr_sims}
\alias{complete.simpr_spec}
\alias{drop_na_.simpr_sims}
\alias{drop_na_.simpr_spec}
\alias{drop_na.simpr_sims}
\alias{drop_na.simpr_spec}
\alias{expand_.simpr_sims}
\alias{expand_.simpr_spec}
\alias{expand.simpr_sims}
\alias{expand.simpr_spec}
\alias{extract_.simpr_sims}
\alias{extract_.simpr_spec}
\alias{extract.simpr_sims}
\alias{extract.simpr_spec}
\alias{fill_.simpr_sims}
\alias{fill_.simpr_spec}
\alias{fill.simpr_sims}
\alias{fill.simpr_spec}
\alias{gather_.simpr_sims}
\alias{gather_.simpr_spec}
\alias{gather.simpr_sims}
\alias{gather.simpr_spec}
\alias{nest_legacy.simpr_sims}
\alias{nest_legacy.simpr_spec}
\alias{nest.simpr_sims}
\alias{nest.simpr_spec}
\alias{pivot_longer.simpr_sims}
\alias{pivot_longer.simpr_spec}
\alias{pivot_wider.simpr_sims}
\alias{pivot_wider.simpr_spec}
\alias{replace_na.simpr_sims}
\alias{replace_na.simpr_spec}
\alias{separate_.simpr_sims}
\alias{separate_.simpr_spec}
\alias{separate_rows_.simpr_sims}
\alias{separate_rows_.simpr_spec}
\alias{separate_rows.simpr_sims}
\alias{separate_rows.simpr_spec}
\alias{separate.simpr_sims}
\alias{separate.simpr_spec}
\alias{spread_.simpr_sims}
\alias{spread_.simpr_spec}
\alias{spread.simpr_sims}
\alias{spread.simpr_spec}
\alias{unite_.simpr_sims}
\alias{unite_.simpr_spec}
\alias{unite.simpr_sims}
\alias{unite.simpr_spec}
\alias{unnest_legacy.simpr_sims}
\alias{unnest_legacy.simpr_spec}
\alias{unnest.simpr_sims}
\alias{unnest.simpr_spec}
\title{Simpr methods for tidyverse verbs}
\usage{
add_count.simpr_sims(
  x,
  ...,
  wt = NULL,
  sort = FALSE,
  name = NULL,
  .drop = deprecated()
)

add_count.simpr_spec(
  x,
  ...,
  wt = NULL,
  sort = FALSE,
  name = NULL,
  .drop = deprecated()
)

anti_join.simpr_sims(x, y, by = NULL, copy = FALSE, ...)

anti_join.simpr_spec(x, y, by = NULL, copy = FALSE, ...)

arrange_.simpr_sims(.data, ..., .dots = list())

arrange_.simpr_spec(.data, ..., .dots = list())

arrange.simpr_sims(.data, ..., .by_group = FALSE)

arrange.simpr_spec(.data, ..., .by_group = FALSE)

as.tbl.simpr_sims(x, ...)

as.tbl.simpr_spec(x, ...)

auto_copy.simpr_sims(x, y, copy = FALSE, ...)

auto_copy.simpr_spec(x, y, copy = FALSE, ...)

collapse.simpr_sims(x, sep = "", width = Inf, last = "")

collapse.simpr_spec(x, sep = "", width = Inf, last = "")

collect.simpr_sims(x, ...)

collect.simpr_spec(x, ...)

compute.simpr_sims(x, ...)

compute.simpr_spec(x, ...)

count.simpr_sims(x, ..., wt = NULL, sort = FALSE, name = NULL)

count.simpr_spec(x, ..., wt = NULL, sort = FALSE, name = NULL)

distinct_.simpr_sims(.data, ..., .dots, .keep_all = FALSE)

distinct_.simpr_spec(.data, ..., .dots, .keep_all = FALSE)

distinct.simpr_sims(.data, ..., .keep_all = FALSE)

distinct.simpr_spec(.data, ..., .keep_all = FALSE)

do_.simpr_sims(.data, ..., .dots = list())

do_.simpr_spec(.data, ..., .dots = list())

do.simpr_sims(.data, ...)

do.simpr_spec(.data, ...)

dplyr_col_modify.simpr_sims(data, cols)

dplyr_col_modify.simpr_spec(data, cols)

dplyr_reconstruct.simpr_sims(data, template)

dplyr_reconstruct.simpr_spec(data, template)

dplyr_row_slice.simpr_sims(data, i, ...)

dplyr_row_slice.simpr_spec(data, i, ...)

filter_.simpr_sims(.data, ..., .dots = list())

filter_.simpr_spec(.data, ..., .dots = list())

filter.simpr_sims(.data, ..., .preserve = FALSE)

filter.simpr_spec(.data, ..., .preserve = FALSE)

full_join.simpr_sims(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

full_join.simpr_spec(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

group_by_.simpr_sims(.data, ..., .dots = list(), add = FALSE)

group_by_.simpr_spec(.data, ..., .dots = list(), add = FALSE)

group_by.simpr_sims(
  .data,
  ...,
  .add = FALSE,
  .drop = group_by_drop_default(.data)
)

group_by.simpr_spec(
  .data,
  ...,
  .add = FALSE,
  .drop = group_by_drop_default(.data)
)

group_data.simpr_sims(.data)

group_data.simpr_spec(.data)

group_indices_.simpr_sims(.data, ..., .dots = list())

group_indices_.simpr_spec(.data, ..., .dots = list())

group_indices.simpr_sims(.data, ...)

group_indices.simpr_spec(.data, ...)

group_keys.simpr_sims(.tbl, ...)

group_keys.simpr_spec(.tbl, ...)

group_map.simpr_sims(.data, .f, ..., .keep = FALSE)

group_map.simpr_spec(.data, .f, ..., .keep = FALSE)

group_modify.simpr_sims(.data, .f, ..., .keep = FALSE)

group_modify.simpr_spec(.data, .f, ..., .keep = FALSE)

group_nest.simpr_sims(.tbl, ..., .key = "data", keep = FALSE)

group_nest.simpr_spec(.tbl, ..., .key = "data", keep = FALSE)

group_size.simpr_sims(x)

group_size.simpr_spec(x)

group_split.simpr_sims(.tbl, ..., .keep = TRUE)

group_split.simpr_spec(.tbl, ..., .keep = TRUE)

group_trim.simpr_sims(.tbl, .drop = group_by_drop_default(.tbl))

group_trim.simpr_spec(.tbl, .drop = group_by_drop_default(.tbl))

group_vars.simpr_sims(x)

group_vars.simpr_spec(x)

groups.simpr_sims(x)

groups.simpr_spec(x)

inner_join.simpr_sims(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

inner_join.simpr_spec(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

intersect.simpr_sims(x, y, ...)

intersect.simpr_spec(x, y, ...)

left_join.simpr_sims(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

left_join.simpr_spec(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

mutate_.simpr_sims(.data, ..., .dots = list())

mutate_.simpr_spec(.data, ..., .dots = list())

mutate.simpr_sims(.data, ...)

mutate.simpr_spec(.data, ...)

n_groups.simpr_sims(x)

n_groups.simpr_spec(x)

nest_by.simpr_sims(.data, ..., .key = "data", .keep = FALSE)

nest_by.simpr_spec(.data, ..., .key = "data", .keep = FALSE)

nest_join.simpr_sims(
  x,
  y,
  by = NULL,
  copy = FALSE,
  keep = FALSE,
  name = NULL,
  ...
)

nest_join.simpr_spec(
  x,
  y,
  by = NULL,
  copy = FALSE,
  keep = FALSE,
  name = NULL,
  ...
)

pull.simpr_sims(.data, var = -1, name = NULL, ...)

pull.simpr_spec(.data, var = -1, name = NULL, ...)

relocate.simpr_sims(.data, ..., .before = NULL, .after = NULL)

relocate.simpr_spec(.data, ..., .before = NULL, .after = NULL)

rename_.simpr_sims(.data, ..., .dots = list())

rename_.simpr_spec(.data, ..., .dots = list())

rename_with.simpr_sims(.data, .fn, .cols = everything(), ...)

rename_with.simpr_spec(.data, .fn, .cols = everything(), ...)

rename.simpr_sims(.data, ...)

rename.simpr_spec(.data, ...)

right_join.simpr_sims(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

right_join.simpr_spec(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE
)

rows_delete.simpr_sims(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_delete.simpr_spec(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_insert.simpr_sims(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_insert.simpr_spec(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_patch.simpr_sims(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_patch.simpr_spec(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_update.simpr_sims(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_update.simpr_spec(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_upsert.simpr_sims(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rows_upsert.simpr_spec(x, y, by = NULL, ..., copy = FALSE, in_place = FALSE)

rowwise.simpr_sims(data, ...)

rowwise.simpr_spec(data, ...)

same_src.simpr_sims(x, y)

same_src.simpr_spec(x, y)

sample_frac.simpr_sims(
  tbl,
  size = 1,
  replace = FALSE,
  weight = NULL,
  .env = NULL,
  ...
)

sample_frac.simpr_spec(
  tbl,
  size = 1,
  replace = FALSE,
  weight = NULL,
  .env = NULL,
  ...
)

sample_n.simpr_sims(
  tbl,
  size,
  replace = FALSE,
  weight = NULL,
  .env = NULL,
  ...
)

sample_n.simpr_spec(
  tbl,
  size,
  replace = FALSE,
  weight = NULL,
  .env = NULL,
  ...
)

select_.simpr_sims(.data, ..., .dots = list())

select_.simpr_spec(.data, ..., .dots = list())

select.simpr_sims(.data, ...)

select.simpr_spec(.data, ...)

semi_join.simpr_sims(x, y, by = NULL, copy = FALSE, ...)

semi_join.simpr_spec(x, y, by = NULL, copy = FALSE, ...)

setdiff.simpr_sims(x, y, ...)

setdiff.simpr_spec(x, y, ...)

setequal.simpr_sims(x, y, ...)

setequal.simpr_spec(x, y, ...)

slice_.simpr_sims(.data, ..., .dots = list())

slice_.simpr_spec(.data, ..., .dots = list())

slice_head.simpr_sims(.data, ..., n, prop)

slice_head.simpr_spec(.data, ..., n, prop)

slice_max.simpr_sims(.data, order_by, ..., n, prop, with_ties = TRUE)

slice_max.simpr_spec(.data, order_by, ..., n, prop, with_ties = TRUE)

slice_min.simpr_sims(.data, order_by, ..., n, prop, with_ties = TRUE)

slice_min.simpr_spec(.data, order_by, ..., n, prop, with_ties = TRUE)

slice_sample.simpr_sims(.data, ..., n, prop, weight_by = NULL, replace = FALSE)

slice_sample.simpr_spec(.data, ..., n, prop, weight_by = NULL, replace = FALSE)

slice_tail.simpr_sims(.data, ..., n, prop)

slice_tail.simpr_spec(.data, ..., n, prop)

slice.simpr_sims(.data, ..., .preserve = FALSE)

slice.simpr_spec(.data, ..., .preserve = FALSE)

summarise_.simpr_sims(.data, ..., .dots = list())

summarise_.simpr_spec(.data, ..., .dots = list())

summarise.simpr_sims(.data, ..., .groups = NULL)

summarise.simpr_spec(.data, ..., .groups = NULL)

tally.simpr_sims(x, wt = NULL, sort = FALSE, name = NULL)

tally.simpr_spec(x, wt = NULL, sort = FALSE, name = NULL)

tbl_vars.simpr_sims(x)

tbl_vars.simpr_spec(x)

transmute_.simpr_sims(.data, ..., .dots = list())

transmute_.simpr_spec(.data, ..., .dots = list())

transmute.simpr_sims(.data, ...)

transmute.simpr_spec(.data, ...)

ungroup.simpr_sims(x, ...)

ungroup.simpr_spec(x, ...)

union_all.simpr_sims(x, y, ...)

union_all.simpr_spec(x, y, ...)

union.simpr_sims(x, y, ...)

union.simpr_spec(x, y, ...)

complete_.simpr_sims(data, cols, fill = list(), ...)

complete_.simpr_spec(data, cols, fill = list(), ...)

complete.simpr_sims(data, ..., fill = list())

complete.simpr_spec(data, ..., fill = list())

drop_na_.simpr_sims(data, vars)

drop_na_.simpr_spec(data, vars)

drop_na.simpr_sims(data, ...)

drop_na.simpr_spec(data, ...)

expand_.simpr_sims(data, dots, ...)

expand_.simpr_spec(data, dots, ...)

expand.simpr_sims(data, ..., .name_repair = "check_unique")

expand.simpr_spec(data, ..., .name_repair = "check_unique")

extract_.simpr_sims(
  data,
  col,
  into,
  regex = "([[:alnum:]]+)",
  remove = TRUE,
  convert = FALSE,
  ...
)

extract_.simpr_spec(
  data,
  col,
  into,
  regex = "([[:alnum:]]+)",
  remove = TRUE,
  convert = FALSE,
  ...
)

extract.simpr_sims(
  data,
  col,
  into,
  regex = "([[:alnum:]]+)",
  remove = TRUE,
  convert = FALSE,
  ...
)

extract.simpr_spec(
  data,
  col,
  into,
  regex = "([[:alnum:]]+)",
  remove = TRUE,
  convert = FALSE,
  ...
)

fill_.simpr_sims(data, fill_cols, .direction = c("down", "up"))

fill_.simpr_spec(data, fill_cols, .direction = c("down", "up"))

fill.simpr_sims(data, ..., .direction = c("down", "up", "downup", "updown"))

fill.simpr_spec(data, ..., .direction = c("down", "up", "downup", "updown"))

gather_.simpr_sims(
  data,
  key_col,
  value_col,
  gather_cols,
  na.rm = FALSE,
  convert = FALSE,
  factor_key = FALSE
)

gather_.simpr_spec(
  data,
  key_col,
  value_col,
  gather_cols,
  na.rm = FALSE,
  convert = FALSE,
  factor_key = FALSE
)

gather.simpr_sims(
  data,
  key = "key",
  value = "value",
  ...,
  na.rm = FALSE,
  convert = FALSE,
  factor_key = FALSE
)

gather.simpr_spec(
  data,
  key = "key",
  value = "value",
  ...,
  na.rm = FALSE,
  convert = FALSE,
  factor_key = FALSE
)

nest_legacy.simpr_sims(data, ..., .key = "data")

nest_legacy.simpr_spec(data, ..., .key = "data")

nest.simpr_sims(.data, ..., .names_sep = NULL, .key = deprecated())

nest.simpr_spec(.data, ..., .names_sep = NULL, .key = deprecated())

pivot_longer.simpr_sims(
  data,
  cols,
  names_to = "name",
  names_prefix = NULL,
  names_sep = NULL,
  names_pattern = NULL,
  names_ptypes = list(),
  names_transform = list(),
  names_repair = "check_unique",
  values_to = "value",
  values_drop_na = FALSE,
  values_ptypes = list(),
  values_transform = list(),
  ...
)

pivot_longer.simpr_spec(
  data,
  cols,
  names_to = "name",
  names_prefix = NULL,
  names_sep = NULL,
  names_pattern = NULL,
  names_ptypes = list(),
  names_transform = list(),
  names_repair = "check_unique",
  values_to = "value",
  values_drop_na = FALSE,
  values_ptypes = list(),
  values_transform = list(),
  ...
)

pivot_wider.simpr_sims(
  data,
  id_cols = NULL,
  names_from = name,
  names_prefix = "",
  names_sep = "_",
  names_glue = NULL,
  names_sort = FALSE,
  names_repair = "check_unique",
  values_from = value,
  values_fill = NULL,
  values_fn = NULL,
  ...
)

pivot_wider.simpr_spec(
  data,
  id_cols = NULL,
  names_from = name,
  names_prefix = "",
  names_sep = "_",
  names_glue = NULL,
  names_sort = FALSE,
  names_repair = "check_unique",
  values_from = value,
  values_fill = NULL,
  values_fn = NULL,
  ...
)

replace_na.simpr_sims(data, replace, ...)

replace_na.simpr_spec(data, replace, ...)

separate_.simpr_sims(
  data,
  col,
  into,
  sep = "[^[:alnum:]]+",
  remove = TRUE,
  convert = FALSE,
  extra = "warn",
  fill = "warn",
  ...
)

separate_.simpr_spec(
  data,
  col,
  into,
  sep = "[^[:alnum:]]+",
  remove = TRUE,
  convert = FALSE,
  extra = "warn",
  fill = "warn",
  ...
)

separate_rows_.simpr_sims(data, cols, sep = "[^[:alnum:].]+", convert = FALSE)

separate_rows_.simpr_spec(data, cols, sep = "[^[:alnum:].]+", convert = FALSE)

separate_rows.simpr_sims(data, ..., sep = "[^[:alnum:].]+", convert = FALSE)

separate_rows.simpr_spec(data, ..., sep = "[^[:alnum:].]+", convert = FALSE)

separate.simpr_sims(
  data,
  col,
  into,
  sep = "[^[:alnum:]]+",
  remove = TRUE,
  convert = FALSE,
  extra = "warn",
  fill = "warn",
  ...
)

separate.simpr_spec(
  data,
  col,
  into,
  sep = "[^[:alnum:]]+",
  remove = TRUE,
  convert = FALSE,
  extra = "warn",
  fill = "warn",
  ...
)

spread_.simpr_sims(
  data,
  key_col,
  value_col,
  fill = NA,
  convert = FALSE,
  drop = TRUE,
  sep = NULL
)

spread_.simpr_spec(
  data,
  key_col,
  value_col,
  fill = NA,
  convert = FALSE,
  drop = TRUE,
  sep = NULL
)

spread.simpr_sims(
  data,
  key,
  value,
  fill = NA,
  convert = FALSE,
  drop = TRUE,
  sep = NULL
)

spread.simpr_spec(
  data,
  key,
  value,
  fill = NA,
  convert = FALSE,
  drop = TRUE,
  sep = NULL
)

unite_.simpr_sims(data, col, from, sep = "_", remove = TRUE)

unite_.simpr_spec(data, col, from, sep = "_", remove = TRUE)

unite.simpr_sims(data, col, ..., sep = "_", remove = TRUE, na.rm = FALSE)

unite.simpr_spec(data, col, ..., sep = "_", remove = TRUE, na.rm = FALSE)

unnest_legacy.simpr_sims(
  data,
  ...,
  .drop = NA,
  .id = NULL,
  .sep = NULL,
  .preserve = NULL
)

unnest_legacy.simpr_spec(
  data,
  ...,
  .drop = NA,
  .id = NULL,
  .sep = NULL,
  .preserve = NULL
)

unnest.simpr_sims(
  data,
  cols,
  ...,
  keep_empty = FALSE,
  ptype = NULL,
  names_sep = NULL,
  names_repair = "check_unique",
  .drop = deprecated(),
  .id = deprecated(),
  .sep = deprecated(),
  .preserve = deprecated()
)

unnest.simpr_spec(
  data,
  cols,
  ...,
  keep_empty = FALSE,
  ptype = NULL,
  names_sep = NULL,
  names_repair = "check_unique",
  .drop = deprecated(),
  .id = deprecated(),
  .sep = deprecated(),
  .preserve = deprecated()
)
}
\arguments{
\item{x}{See original function documentation}

\item{\dots}{See original function documentation}

\item{wt}{See original function documentation}

\item{sort}{See original function documentation}

\item{name}{See original function documentation}

\item{.drop}{See original function documentation}

\item{y}{See original function documentation}

\item{by}{See original function documentation}

\item{copy}{See original function documentation}

\item{.data}{See original function documentation}

\item{.dots}{See original function documentation}

\item{.by_group}{See original function documentation}

\item{sep}{See original function documentation}

\item{width}{See original function documentation}

\item{last}{See original function documentation}

\item{.keep_all}{See original function documentation}

\item{data}{See original function documentation}

\item{cols}{See original function documentation}

\item{template}{See original function documentation}

\item{i}{See original function documentation}

\item{.preserve}{See original function documentation}

\item{suffix}{See original function documentation}

\item{keep}{See original function documentation}

\item{add}{See original function documentation}

\item{.add}{See original function documentation}

\item{.tbl}{See original function documentation}

\item{.f}{See original function documentation}

\item{.keep}{See original function documentation}

\item{.key}{See original function documentation}

\item{var}{See original function documentation}

\item{.before}{See original function documentation}

\item{.after}{See original function documentation}

\item{.fn}{See original function documentation}

\item{.cols}{See original function documentation}

\item{in_place}{See original function documentation}

\item{tbl}{See original function documentation}

\item{size}{See original function documentation}

\item{replace}{See original function documentation}

\item{weight}{See original function documentation}

\item{.env}{See original function documentation}

\item{n}{See original function documentation}

\item{prop}{See original function documentation}

\item{order_by}{See original function documentation}

\item{with_ties}{See original function documentation}

\item{weight_by}{See original function documentation}

\item{.groups}{See original function documentation}

\item{fill}{See original function documentation}

\item{vars}{See original function documentation}

\item{dots}{See original function documentation}

\item{.name_repair}{See original function documentation}

\item{col}{See original function documentation}

\item{into}{See original function documentation}

\item{regex}{See original function documentation}

\item{remove}{See original function documentation}

\item{convert}{See original function documentation}

\item{fill_cols}{See original function documentation}

\item{.direction}{See original function documentation}

\item{key_col}{See original function documentation}

\item{value_col}{See original function documentation}

\item{gather_cols}{See original function documentation}

\item{na.rm}{See original function documentation}

\item{factor_key}{See original function documentation}

\item{key}{See original function documentation}

\item{value}{See original function documentation}

\item{.names_sep}{See original function documentation}

\item{names_to}{See original function documentation}

\item{names_prefix}{See original function documentation}

\item{names_sep}{See original function documentation}

\item{names_pattern}{See original function documentation}

\item{names_ptypes}{See original function documentation}

\item{names_transform}{See original function documentation}

\item{names_repair}{See original function documentation}

\item{values_to}{See original function documentation}

\item{values_drop_na}{See original function documentation}

\item{values_ptypes}{See original function documentation}

\item{values_transform}{See original function documentation}

\item{id_cols}{See original function documentation}

\item{names_from}{See original function documentation}

\item{names_glue}{See original function documentation}

\item{names_sort}{See original function documentation}

\item{values_from}{See original function documentation}

\item{values_fill}{See original function documentation}

\item{values_fn}{See original function documentation}

\item{extra}{See original function documentation}

\item{drop}{See original function documentation}

\item{from}{See original function documentation}

\item{.id}{See original function documentation}

\item{.sep}{See original function documentation}

\item{keep_empty}{See original function documentation}

\item{ptype}{See original function documentation}
}
\description{
These are simpr-compatible methods for generic
\code{dplyr} and \code{tidyr} verbs. The
user is not expected to call these directly.
}
\details{
See original function documentation for details of the functions
}
